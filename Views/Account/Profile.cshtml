@model WebApplication1.Models.ViewModels.ProfileViewModel

@{
    ViewData["Title"] = "Thông tin cá nhân";
}
<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/styleTTCN.css">
    <link rel="stylesheet" href="~/css/styleNav.css">
    <title>BOWO - Nền tảng tuyển dụng</title>

</head>
<div class="container">
    <h1>Thông Tin Cá Nhân</h1>

        @Html.AntiForgeryToken()
        <!-- Ảnh đại diện -->
        <div class="profile-pic-container">
            <div class="profile-pic">
            <img id="profile-image" src="@(!string.IsNullOrEmpty(Model.sFile_Avata_Path) ? Model.sFile_Avata_Path : Url.Content("~/images/avatar-default.png"))" alt="Avatar" />

               
            </div>  
        </div>

        <!-- Thông tin cá nhân -->
        <div class="form-group">
            <label for="fullname">Họ và tên *</label>
            <input type="text" id="fullname" asp-for="HoTen" placeholder="Vui lòng nhập" >
        </div>

        <div class="form-row">
            <div class="form-col">
                <label for="phone">Số điện thoại *</label>
                <input type="tel" id="phone" asp-for="SDT" placeholder="Vui lòng nhập" >
            </div>
            <div class="form-col">
                <label for="email">Email *</label>
                <input type="email" id="email" asp-for="Email" placeholder="Vui lòng nhập" >
            </div>
        </div>

        <div class="form-group">
            <label for="id-number">Số định danh cá nhân (CCCD/CMT) *</label>
            <input type="text" id="id-number" asp-for="CCCD" placeholder="Vui lòng nhập" >
        </div>

        <div class="form-row">
            <div class="form-col">
                <label for="city">Tỉnh/Thành phố *</label>
                <select id="city" asp-for="DiaChi" >
                    <option value="" disabled selected>Chọn thành phố</option>
                    <option>Hà Nội</option>
                    <option>Hồ Chí Minh</option>
                    <option>Đà Nẵng</option>

                </select>
            </div>
            
        </div>

        <div class="form-row">
           
            <div class="form-col">
                <label> Ảnh CCCD </label>

            <div style="margin-top:10px;">
                <img id="cccd-preview"
                     src="@(!string.IsNullOrEmpty(Model.sFile_CCCD_Path) ? Model.sFile_CCCD_Path : "")"
                     alt="Ảnh CCCD"
                     style="@(string.IsNullOrEmpty(Model.sFile_CCCD_Path) ? "display:none;" : "") max-width: 250px; border-radius: 10px;">
            </div>
            </div>
        </div>
        
        <div class="form-row">
        <form asp-action="Logout" method="post">
            @Html.AntiForgeryToken()
            <button type="submit" class="submit-btn" id="submit-btn">Đăng xuất</button>
        </form>
          
        </div>
   
</div>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Xử lý upload ảnh đại diện
        const photoInput = document.getElementById('photo-input');
        const choosePhoto = document.getElementById('choose-photo');
        const profileImage = document.getElementById('profile-image');
        const uploadIcon = document.getElementById('upload-icon');
        const avatarError = document.getElementById('avatar-error');


        choosePhoto.addEventListener('click', function () {
            photoInput.click();
        });

        photoInput.addEventListener('change', function () {
            if (this.files && this.files[0]) {
                // Validate file
                const file = this.files[0];
                const validTypes = ['image/jpeg', 'image/png', 'image/gif'];
                const maxSize = 5 * 1024 * 1024; // 5MB

                if (!validTypes.includes(file.type)) {
                    avatarError.textContent = 'Chỉ chấp nhận file ảnh (JPEG, PNG, GIF)';
                    this.value = '';
                    return;
                }

                if (file.size > maxSize) {
                    avatarError.textContent = 'File ảnh không được vượt quá 5MB';
                    this.value = '';
                    return;
                }

                avatarError.textContent = '';

                const reader = new FileReader();
                reader.onload = function (e) {
                    profileImage.src = e.target.result;
                    profileImage.style.display = 'block';
                    uploadIcon.style.display = 'none';
                }
                reader.readAsDataURL(file);
            }
        });

        // Xử lý upload ảnh CCCD
        const cccdInput = document.getElementById('cccd-input');
        const cccdUpload = document.getElementById('cccd-upload');
        const cccdError = document.getElementById('cccd-error');
        //const cccdError = document.getElementById('cccd-error');
        const cccdPreview = document.getElementById('cccd-preview');

        cccdUpload.addEventListener('click', function () {
            cccdInput.click();
        });

        cccdInput.addEventListener('change', function () {
            if (this.files && this.files[0]) {
                const file = this.files[0];
                const validTypes = ['image/jpeg', 'image/png'];
                const maxSize = 5 * 1024 * 1024; // 5MB

                if (!validTypes.includes(file.type)) {
                    cccdError.textContent = 'Chỉ chấp nhận file ảnh (JPEG, PNG)';
                    this.value = '';
                    return;
                }

                if (file.size > maxSize) {
                    cccdError.textContent = 'File ảnh không được vượt quá 5MB';
                    this.value = '';
                    return;
                }

                cccdError.textContent = '';
                cccdUpload.innerHTML = `<span>📎 ${file.name}</span>`;
                // 👇 Hiển thị ảnh preview
                const reader = new FileReader();
                reader.onload = function (e) {
                    cccdPreview.src = e.target.result;
                    cccdPreview.style.display = 'block';
                };
                reader.readAsDataURL(file);
            }
        });

        // Xử lý submit form
        // Xử lý submit form
        const registerForm = document.getElementById('registerForm');
        registerForm.addEventListener('submit', function (e) {
            // Validate trước khi submit
            if (!cccdInput.files || cccdInput.files.length === 0) {
                e.preventDefault();
                cccdError.textContent = 'Vui lòng tải lên ảnh CCCD';
                return;
            }

            // Hiển thị loading
            const submitBtn = document.getElementById('submit-btn');
            submitBtn.disabled = true;
            submitBtn.textContent = 'Đang xử lý...';
        });

    });
</script>
</html>

