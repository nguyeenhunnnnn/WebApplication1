// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250508152222_V12")]
    partial class V12
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.BaiDang", b =>
                {
                    b.Property<int>("PK_iMaBaiDang")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PK_iMaBaiDang"));

                    b.Property<int?>("FK_iMaHS")
                        .HasColumnType("int");

                    b.Property<string>("FK_iMaTK")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FileCVPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsHidden")
                        .HasColumnType("bit");

                    b.Property<DateTime>("dNgayTao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("dThoiGianHetHan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("dUuTienDen")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("fMucLuong")
                        .HasColumnType("DECIMAL(10,2)");

                    b.Property<string>("sBangCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sDiaDiem")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("sGioiTinh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sKinhNghiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sMoTa")
                        .HasColumnType("NVARCHAR(MAX)");

                    b.Property<string>("sMonday")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sTieuDe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("sTrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("sTrangThaiGD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sTuoi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sYCau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PK_iMaBaiDang");

                    b.HasIndex("FK_iMaHS");

                    b.HasIndex("FK_iMaTK");

                    b.ToTable("BaiDangs");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.DanhGiaGiaSu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GiaSuId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime2");

                    b.Property<string>("NguoiDanhGiaId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SoSao")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GiaSuId");

                    b.HasIndex("NguoiDanhGiaId");

                    b.ToTable("DanhGiaGiaSus");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.GoiDichVu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("SoNgayHieuLuc")
                        .HasColumnType("int");

                    b.Property<string>("TenGoi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("tbl_GoiDichVu", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.HoSo", b =>
                {
                    b.Property<int>("iMaHS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("iMaHS"));

                    b.Property<string>("FK_iMaTK")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("sBangCap")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("sDuongDanTep")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("sDuongDanTepBC")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sKinhNghiem")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sKyNang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("sTieuDe")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("sTrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("iMaHS");

                    b.HasIndex("FK_iMaTK");

                    b.ToTable("HoSos");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.TaiKhoan", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("CCCD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FileAvata")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FileCCCD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("GoiCuoc")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("VaiTro")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.ThanhToan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BaiDangId")
                        .HasColumnType("int");

                    b.Property<int>("GoiDichVuId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDuyet")
                        .HasColumnType("bit");

                    b.Property<DateTime>("NgayThanhToan")
                        .HasColumnType("datetime2");

                    b.Property<string>("TaiKhoanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BaiDangId");

                    b.HasIndex("GoiDichVuId");

                    b.HasIndex("TaiKhoanId");

                    b.ToTable("tbl_ThanhToan", (string)null);
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.TinNhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BaiDangId")
                        .HasColumnType("int");

                    b.Property<string>("NguoiGuiId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NguoiNhanId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ThoiGianGui")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BaiDangId");

                    b.HasIndex("NguoiGuiId");

                    b.HasIndex("NguoiNhanId");

                    b.ToTable("TinNhans");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.UngTuyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FK_iMaBaiDang")
                        .HasColumnType("int");

                    b.Property<int>("FK_iMaHS")
                        .HasColumnType("int");

                    b.Property<string>("FK_iMaTK_GiaSu")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("NgayUngTuyen")
                        .HasColumnType("datetime2");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FK_iMaBaiDang");

                    b.HasIndex("FK_iMaHS");

                    b.HasIndex("FK_iMaTK_GiaSu");

                    b.ToTable("UngTuyen");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.BaiDang", b =>
                {
                    b.HasOne("WebApplication1.Models.Entities.HoSo", "HoSo")
                        .WithMany("BaiDangs")
                        .HasForeignKey("FK_iMaHS")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("BaiDangs")
                        .HasForeignKey("FK_iMaTK")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("HoSo");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.DanhGiaGiaSu", b =>
                {
                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", "GiaSu")
                        .WithMany("DanhGiaNhanDuoc")
                        .HasForeignKey("GiaSuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", "NguoiDanhGia")
                        .WithMany("DanhGiaDaViet")
                        .HasForeignKey("NguoiDanhGiaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GiaSu");

                    b.Navigation("NguoiDanhGia");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.HoSo", b =>
                {
                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("HoSos")
                        .HasForeignKey("FK_iMaTK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.ThanhToan", b =>
                {
                    b.HasOne("WebApplication1.Models.Entities.BaiDang", "BaiDang")
                        .WithMany("ThanhToans")
                        .HasForeignKey("BaiDangId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("WebApplication1.Models.Entities.GoiDichVu", "GoiDichVu")
                        .WithMany("ThanhToans")
                        .HasForeignKey("GoiDichVuId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", "TaiKhoan")
                        .WithMany("ThanhToans")
                        .HasForeignKey("TaiKhoanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BaiDang");

                    b.Navigation("GoiDichVu");

                    b.Navigation("TaiKhoan");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.TinNhan", b =>
                {
                    b.HasOne("WebApplication1.Models.Entities.BaiDang", "BaiDang")
                        .WithMany("TinNhans")
                        .HasForeignKey("BaiDangId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", "NguoiGui")
                        .WithMany("TinNhanGui")
                        .HasForeignKey("NguoiGuiId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", "NguoiNhan")
                        .WithMany("TinNhanNhan")
                        .HasForeignKey("NguoiNhanId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BaiDang");

                    b.Navigation("NguoiGui");

                    b.Navigation("NguoiNhan");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.UngTuyen", b =>
                {
                    b.HasOne("WebApplication1.Models.Entities.BaiDang", "BaiDang")
                        .WithMany("UngTuyens")
                        .HasForeignKey("FK_iMaBaiDang")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Entities.HoSo", "HoSo")
                        .WithMany("UngTuyens")
                        .HasForeignKey("FK_iMaHS")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.Entities.TaiKhoan", "TaiKhoanGiaSu")
                        .WithMany("UngTuyens")
                        .HasForeignKey("FK_iMaTK_GiaSu")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BaiDang");

                    b.Navigation("HoSo");

                    b.Navigation("TaiKhoanGiaSu");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.BaiDang", b =>
                {
                    b.Navigation("ThanhToans");

                    b.Navigation("TinNhans");

                    b.Navigation("UngTuyens");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.GoiDichVu", b =>
                {
                    b.Navigation("ThanhToans");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.HoSo", b =>
                {
                    b.Navigation("BaiDangs");

                    b.Navigation("UngTuyens");
                });

            modelBuilder.Entity("WebApplication1.Models.Entities.TaiKhoan", b =>
                {
                    b.Navigation("BaiDangs");

                    b.Navigation("DanhGiaDaViet");

                    b.Navigation("DanhGiaNhanDuoc");

                    b.Navigation("HoSos");

                    b.Navigation("ThanhToans");

                    b.Navigation("TinNhanGui");

                    b.Navigation("TinNhanNhan");

                    b.Navigation("UngTuyens");
                });
#pragma warning restore 612, 618
        }
    }
}
